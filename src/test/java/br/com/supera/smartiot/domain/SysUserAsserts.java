package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SysUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysUserAllPropertiesEquals(SysUser expected, SysUser actual) {
        assertSysUserAutoGeneratedPropertiesEquals(expected, actual);
        assertSysUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysUserAllUpdatablePropertiesEquals(SysUser expected, SysUser actual) {
        assertSysUserUpdatableFieldsEquals(expected, actual);
        assertSysUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysUserAutoGeneratedPropertiesEquals(SysUser expected, SysUser actual) {
        assertThat(expected)
            .as("Verify SysUser auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysUserUpdatableFieldsEquals(SysUser expected, SysUser actual) {
        assertThat(expected)
            .as("Verify SysUser relevant properties")
            .satisfies(e -> assertThat(e.getUsername()).as("check username").isEqualTo(actual.getUsername()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getRole()).as("check role").isEqualTo(actual.getRole()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysUserUpdatableRelationshipsEquals(SysUser expected, SysUser actual) {}
}
