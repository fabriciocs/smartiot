package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TransmitterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransmitterAllPropertiesEquals(Transmitter expected, Transmitter actual) {
        assertTransmitterAutoGeneratedPropertiesEquals(expected, actual);
        assertTransmitterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransmitterAllUpdatablePropertiesEquals(Transmitter expected, Transmitter actual) {
        assertTransmitterUpdatableFieldsEquals(expected, actual);
        assertTransmitterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransmitterAutoGeneratedPropertiesEquals(Transmitter expected, Transmitter actual) {
        assertThat(expected)
            .as("Verify Transmitter auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransmitterUpdatableFieldsEquals(Transmitter expected, Transmitter actual) {
        assertThat(expected)
            .as("Verify Transmitter relevant properties")
            .satisfies(e -> assertThat(e.getSerialNumber()).as("check serialNumber").isEqualTo(actual.getSerialNumber()))
            .satisfies(e -> assertThat(e.getFrequency()).as("check frequency").isEqualTo(actual.getFrequency()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransmitterUpdatableRelationshipsEquals(Transmitter expected, Transmitter actual) {}
}
