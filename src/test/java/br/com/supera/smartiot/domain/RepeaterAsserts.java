package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RepeaterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepeaterAllPropertiesEquals(Repeater expected, Repeater actual) {
        assertRepeaterAutoGeneratedPropertiesEquals(expected, actual);
        assertRepeaterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepeaterAllUpdatablePropertiesEquals(Repeater expected, Repeater actual) {
        assertRepeaterUpdatableFieldsEquals(expected, actual);
        assertRepeaterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepeaterAutoGeneratedPropertiesEquals(Repeater expected, Repeater actual) {
        assertThat(expected)
            .as("Verify Repeater auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepeaterUpdatableFieldsEquals(Repeater expected, Repeater actual) {
        assertThat(expected)
            .as("Verify Repeater relevant properties")
            .satisfies(e -> assertThat(e.getSerialNumber()).as("check serialNumber").isEqualTo(actual.getSerialNumber()))
            .satisfies(e -> assertThat(e.getRange()).as("check range").isEqualTo(actual.getRange()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepeaterUpdatableRelationshipsEquals(Repeater expected, Repeater actual) {}
}
