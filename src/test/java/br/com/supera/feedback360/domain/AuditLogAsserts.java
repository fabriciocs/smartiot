package br.com.supera.feedback360.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AuditLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogAllPropertiesEquals(AuditLog expected, AuditLog actual) {
        assertAuditLogAutoGeneratedPropertiesEquals(expected, actual);
        assertAuditLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogAllUpdatablePropertiesEquals(AuditLog expected, AuditLog actual) {
        assertAuditLogUpdatableFieldsEquals(expected, actual);
        assertAuditLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogAutoGeneratedPropertiesEquals(AuditLog expected, AuditLog actual) {
        assertThat(expected)
            .as("Verify AuditLog auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogUpdatableFieldsEquals(AuditLog expected, AuditLog actual) {
        assertThat(expected)
            .as("Verify AuditLog relevant properties")
            .satisfies(e -> assertThat(e.getAction()).as("check action").isEqualTo(actual.getAction()))
            .satisfies(e -> assertThat(e.getTimestamp()).as("check timestamp").isEqualTo(actual.getTimestamp()))
            .satisfies(e -> assertThat(e.getDetails()).as("check details").isEqualTo(actual.getDetails()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogUpdatableRelationshipsEquals(AuditLog expected, AuditLog actual) {
        assertThat(expected)
            .as("Verify AuditLog relationships")
            .satisfies(e -> assertThat(e.getUser()).as("check user").isEqualTo(actual.getUser()));
    }
}
