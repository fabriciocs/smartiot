package br.com.supera.feedback360.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IntegrationConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIntegrationConfigAllPropertiesEquals(IntegrationConfig expected, IntegrationConfig actual) {
        assertIntegrationConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertIntegrationConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIntegrationConfigAllUpdatablePropertiesEquals(IntegrationConfig expected, IntegrationConfig actual) {
        assertIntegrationConfigUpdatableFieldsEquals(expected, actual);
        assertIntegrationConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIntegrationConfigAutoGeneratedPropertiesEquals(IntegrationConfig expected, IntegrationConfig actual) {
        assertThat(expected)
            .as("Verify IntegrationConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIntegrationConfigUpdatableFieldsEquals(IntegrationConfig expected, IntegrationConfig actual) {
        assertThat(expected)
            .as("Verify IntegrationConfig relevant properties")
            .satisfies(e -> assertThat(e.getServiceName()).as("check serviceName").isEqualTo(actual.getServiceName()))
            .satisfies(e -> assertThat(e.getConfigData()).as("check configData").isEqualTo(actual.getConfigData()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIntegrationConfigUpdatableRelationshipsEquals(IntegrationConfig expected, IntegrationConfig actual) {
        assertThat(expected)
            .as("Verify IntegrationConfig relationships")
            .satisfies(e -> assertThat(e.getExternalSystem()).as("check externalSystem").isEqualTo(actual.getExternalSystem()));
    }
}
